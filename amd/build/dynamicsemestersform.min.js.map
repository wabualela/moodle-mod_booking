{"version":3,"file":"dynamicsemestersform.min.js","sources":["../src/dynamicsemestersform.js"],"sourcesContent":["/* eslint-disable promise/catch-or-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @author     Bernhard Fischer\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Dynamic semesters form.\n *\n * @module     mod_booking/dynamicsemestersform\n * @copyright  2022 Wunderbyte GmbH\n * @author     Bernhard Fischer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\nexport const init = (selector, formClass) => {\n\n    const formelement = document.querySelector(selector);\n    const jsonstring = window.atob(formelement.dataset.data);\n    const existingsemesters = JSON.parse(jsonstring);\n\n    const form = new DynamicForm(formelement, formClass);\n\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n\n        const response = e.detail;\n        form.load({...existingsemesters, response});\n\n        // eslint-disable-next-line no-console\n        console.log(e.detail);\n\n        getString('allchangessaved', 'mod_booking').then(message => {\n            Notification.addNotification({\n                message: message,\n                type: \"success\"\n            });\n            return;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    });\n\n    // Cancel button does not make much sense in such forms but since it's there we'll just reload.\n    form.addEventListener(form.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n        form.notifyResetFormChanges()\n            .then(() => form.load(existingsemesters));\n    });\n};\n"],"names":["selector","formClass","formelement","document","querySelector","jsonstring","window","atob","dataset","data","existingsemesters","JSON","parse","form","DynamicForm","addEventListener","events","FORM_SUBMITTED","e","preventDefault","response","detail","load","console","log","then","message","addNotification","type","catch","FORM_CANCELLED","notifyResetFormChanges"],"mappings":";;;;;;;;;;;;;;sMAmCoB,CAACA,SAAUC,mBAErBC,YAAcC,SAASC,cAAcJ,UACrCK,WAAaC,OAAOC,KAAKL,YAAYM,QAAQC,MAC7CC,kBAAoBC,KAAKC,MAAMP,YAE/BQ,KAAO,IAAIC,qBAAYZ,YAAaD,WAE1CY,KAAKE,iBAAiBF,KAAKG,OAAOC,gBAAiBC,IAC/CA,EAAEC,uBAEIC,SAAWF,EAAEG,OACnBR,KAAKS,KAAK,IAAIZ,kBAAmBU,SAAAA,WAGjCG,QAAQC,IAAIN,EAAEG,4BAEJ,kBAAmB,eAAeI,MAAKC,gCAChCC,gBAAgB,CACzBD,QAASA,QACTE,KAAM,eAGXC,OAAMX,IAELK,QAAQC,IAAIN,SAKpBL,KAAKE,iBAAiBF,KAAKG,OAAOc,gBAAiBZ,IAC/CA,EAAEC,iBACFN,KAAKkB,yBACAN,MAAK,IAAMZ,KAAKS,KAAKZ"}