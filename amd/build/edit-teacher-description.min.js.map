{"version":3,"file":"edit-teacher-description.min.js","sources":["../src/edit-teacher-description.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    EDITTEACHERDESCRIPTIONBUTTON: '.edit-teacher-description',\n};\n\nexport const init = () => {\n    // eslint-disable-next-line no-console\n    console.log('run init');\n\n    // Cashout functionality.\n    const editteacherbuttons = document.querySelectorAll(SELECTORS.EDITTEACHERDESCRIPTIONBUTTON);\n\n    editteacherbuttons.forEach(editteacherbutton => {\n        if (editteacherbutton) {\n            editteacherbutton.addEventListener('click', e => {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target);\n\n                editTeacherModal(editteacherbutton);\n            });\n        }\n    });\n};\n\n/**\n * Show cashout modal.\n * @param {htmlElement} button\n */\nexport function editTeacherModal(button) {\n\n    // eslint-disable-next-line no-console\n    console.log('cashoutModal');\n\n    const teacherid = button.dataset.teacherid;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"mod_booking\\\\form\\\\modal_editteacherdescription\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {teacherid},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('editteacherslink', 'booking')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n        setTimeout(() => {\n            window.location.reload();\n        }, 500);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}"],"names":["SELECTORS","editTeacherModal","button","console","log","teacherid","dataset","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","setTimeout","window","location","reload","show","document","querySelectorAll","forEach","editteacherbutton","e","target"],"mappings":";;;;;iMAwBMA,uCAC4B,qCA2BlBC,iBAAiBC,QAG7BC,QAAQC,IAAI,sBAENC,UAAYH,OAAOI,QAAQD,UAE3BE,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,kDAEXC,KAAM,CAACL,UAAAA,WAEPM,YAAa,CAACC,OAAO,mBAAU,mBAAoB,YAEnDC,YAAaX,SAIjBK,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAgB,KACxDC,YAAW,KACPC,OAAOC,SAASC,WACjB,QAIPb,UAAUc,qBAnDM,KAEhBlB,QAAQC,IAAI,YAGekB,SAASC,iBAAiBvB,wCAElCwB,SAAQC,oBACnBA,mBACAA,kBAAkBX,iBAAiB,SAASY,IAGxCvB,QAAQC,IAAIsB,EAAEC,QAEd1B,iBAAiBwB"}