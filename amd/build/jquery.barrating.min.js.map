{"version":3,"file":"jquery.barrating.min.js","sources":["../src/jquery.barrating.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * jQuery Bar Rating Plugin v1.2.2\n *\n * http://github.com/antennaio/jquery-bar-rating\n *\n * Copyright (c) 2012-2016 Kazik Pietruszewski\n *\n * This plugin is available under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @param {any} factory factory\n */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    }\n}(function($) {\n\n    var BarRating = (function() {\n\n        /**\n         * BarRating function.\n         */\n        function BarRating() {\n            var self = this;\n\n            // Wrap element in a wrapper div\n            var wrapElement = function() {\n                var classes = ['br-wrapper'];\n\n                if (self.options.theme !== '') {\n                    classes.push('br-theme-' + self.options.theme);\n                }\n\n                self.$elem.wrap($('<div />', {\n                    'class': classes.join(' ')\n                }));\n            };\n\n            // Unwrap element\n            var unwrapElement = function() {\n                self.$elem.unwrap();\n            };\n\n            // Find option by value\n            var findOption = function(value) {\n                if ($.isNumeric(value)) {\n                    value = Math.floor(value);\n                }\n\n                return $('option[value=\"' + value + '\"]', self.$elem);\n            };\n\n            // Get initial option\n            var getInitialOption = function() {\n                var initialRating = self.options.initialRating;\n\n                if (!initialRating) {\n                    return $('option:selected', self.$elem);\n                }\n\n                return findOption(initialRating);\n            };\n\n            // Get empty option\n            var getEmptyOption = function() {\n                var $emptyOpt = self.$elem.find('option[value=\"' + self.options.emptyValue + '\"]');\n\n                if (!$emptyOpt.length && self.options.allowEmpty) {\n                    $emptyOpt = $('<option />', {'value': self.options.emptyValue});\n\n                    return $emptyOpt.prependTo(self.$elem);\n                }\n\n                return $emptyOpt;\n            };\n\n            // Get data\n            var getData = function(key) {\n                var data = self.$elem.data('barrating');\n\n                if (typeof key !== 'undefined') {\n                    return data[key];\n                }\n\n                return data;\n            };\n\n            // Set data\n            var setData = function(key, value) {\n                if (value !== null && typeof value === 'object') {\n                    self.$elem.data('barrating', value);\n                } else {\n                    self.$elem.data('barrating')[key] = value;\n                }\n            };\n\n            // Save data on element\n            var saveDataOnElement = function() {\n                var $opt = getInitialOption();\n                var $emptyOpt = getEmptyOption();\n\n                var value = $opt.val();\n                var text = $opt.data('html') ? $opt.data('html') : $opt.text();\n\n                // If the allowEmpty option is not set let's check if empty option exists in the select field\n                var allowEmpty = (self.options.allowEmpty !== null) ? self.options.allowEmpty : !!$emptyOpt.length;\n\n                var emptyValue = ($emptyOpt.length) ? $emptyOpt.val() : null;\n                var emptyText = ($emptyOpt.length) ? $emptyOpt.text() : null;\n\n                setData(null, {\n                    userOptions: self.options,\n\n                    // Initial rating based on the OPTION value\n                    ratingValue: value,\n                    ratingText: text,\n\n                    // Rating will be restored by calling clear method\n                    originalRatingValue: value,\n                    originalRatingText: text,\n\n                    // Allow empty ratings?\n                    allowEmpty: allowEmpty,\n\n                    // Rating value and text of the empty OPTION\n                    emptyRatingValue: emptyValue,\n                    emptyRatingText: emptyText,\n\n                    // Read-only state\n                    readOnly: self.options.readonly,\n\n                    // Did the user already select a rating?\n                    ratingMade: false\n                });\n            };\n\n            // Remove data on element\n            var removeDataOnElement = function() {\n                self.$elem.removeData('barrating');\n            };\n\n            // Return current rating text\n            var ratingText = function() {\n                return getData('ratingText');\n            };\n\n            // Return current rating value\n            var ratingValue = function() {\n                return getData('ratingValue');\n            };\n\n            // Build widget and return jQuery element\n            var buildWidget = function() {\n                var $w = $('<div />', {'class': 'br-widget'});\n\n                // Create A elements that will replace OPTIONs\n                self.$elem.find('option').each(function() {\n                    var val, text, html, $a;\n\n                    val = $(this).val();\n\n                    // Create ratings - but only if val is not defined as empty\n                    if (val !== getData('emptyRatingValue')) {\n                        text = $(this).text();\n                        html = $(this).data('html');\n                        if (html) {\n text = html;\n}\n\n                        $a = $('<a />', {\n                            'href': '#',\n                            'data-rating-value': val,\n                            'data-rating-text': text,\n                            'html': (self.options.showValues) ? text : ''\n                        });\n\n                        $w.append($a);\n                    }\n\n                });\n\n                // Append .br-current-rating div to the widget\n                if (self.options.showSelectedRating) {\n                    $w.append($('<div />', {'text': '', 'class': 'br-current-rating'}));\n                }\n\n                // Additional classes for the widget\n                if (self.options.reverse) {\n                    $w.addClass('br-reverse');\n                }\n\n                if (self.options.readonly) {\n                    $w.addClass('br-readonly');\n                }\n\n                return $w;\n            };\n\n            // Return a jQuery function name depending on the 'reverse' setting\n            var nextAllorPreviousAll = function() {\n                if (getData('userOptions').reverse) {\n                    return 'nextAll';\n                } else {\n                    return 'prevAll';\n                }\n            };\n\n            // Set the value of the select field\n            var setSelectFieldValue = function(value) {\n                // Change selected option\n                findOption(value).prop('selected', true);\n\n                if (getData('userOptions').triggerChange) {\n                    self.$elem.change();\n                }\n            };\n\n            // Reset select field\n            var resetSelectField = function() {\n                $('option', self.$elem).prop('selected', function() {\n                    return this.defaultSelected;\n                });\n\n                if (getData('userOptions').triggerChange) {\n                    self.$elem.change();\n                }\n            };\n\n            // Display the currently selected rating\n            var showSelectedRating = function(text) {\n                // Text undefined?\n                text = text ? text : ratingText();\n\n                // Special case when the selected rating is defined as empty\n                if (text == getData('emptyRatingText')) {\n                    text = '';\n                }\n\n                // Update .br-current-rating div\n                if (self.options.showSelectedRating) {\n                    self.$elem.parent().find('.br-current-rating').text(text);\n                }\n            };\n\n            // Return rounded fraction of a value (14.4 -> 40, 0.99 -> 90)\n            var fraction = function(value) {\n                return Math.round(((Math.floor(value * 10) / 10) % 1) * 100);\n            };\n\n            // Remove all classes from elements\n            var resetStyle = function() {\n                // Remove all classes starting with br-*\n                self.$widget.find('a').removeClass(function(index, classes) {\n                    return (classes.match(/(^|\\s)br-\\S+/g) || []).join(' ');\n                });\n            };\n\n            // Apply style by setting classes on elements\n            var applyStyle = function() {\n                var $a = self.$widget.find('a[data-rating-value=\"' + ratingValue() + '\"]');\n                var initialRating = getData('userOptions').initialRating;\n                var baseValue = $.isNumeric(ratingValue()) ? ratingValue() : 0;\n                var f = fraction(initialRating);\n                var $all, $fractional;\n\n                resetStyle();\n\n                // Add classes\n                $a.addClass('br-selected br-current')[nextAllorPreviousAll()]()\n                    .addClass('br-selected');\n\n                if (!getData('ratingMade') && $.isNumeric(initialRating)) {\n                    if ((initialRating <= baseValue) || !f) {\n                        return;\n                    }\n\n                    $all = self.$widget.find('a');\n\n                    if ($a.length) {\n                        $fractional = $a[(getData('userOptions').reverse) ? 'prev' : 'next']();\n                    } else {\n                        $fractional = $all[(getData('userOptions').reverse) ? 'last' : 'first']();\n                    }\n\n                    $fractional.addClass('br-fractional');\n                    $fractional.addClass('br-fractional-' + f);\n                }\n            };\n\n            // Check if the element is deselectable?\n            var isDeselectable = function($element) {\n                if (!getData('allowEmpty') || !getData('userOptions').deselectable) {\n                    return false;\n                }\n\n                return (ratingValue() == $element.attr('data-rating-value'));\n            };\n\n            // Handle click events\n            var attachClickHandler = function($elements) {\n                $elements.on('click.barrating', function(event) {\n                    var $a = $(this),\n                        options = getData('userOptions'),\n                        value,\n                        text;\n\n                    event.preventDefault();\n\n                    value = $a.attr('data-rating-value');\n                    text = $a.attr('data-rating-text');\n\n                    // Is current and deselectable?\n                    if (isDeselectable($a)) {\n                        value = getData('emptyRatingValue');\n                        text = getData('emptyRatingText');\n                    }\n\n                    // Remember selected rating\n                    setData('ratingValue', value);\n                    setData('ratingText', text);\n                    setData('ratingMade', true);\n\n                    setSelectFieldValue(value);\n                    showSelectedRating(text);\n\n                    applyStyle();\n\n                    // OnSelect callback\n                    options.onSelect.call(\n                        self,\n                        ratingValue(),\n                        ratingText(),\n                        event\n                    );\n\n                    return false;\n                });\n            };\n\n            // Handle mouseenter events\n            var attachMouseEnterHandler = function($elements) {\n                $elements.on('mouseenter.barrating', function() {\n                    if (!self.options.initialRating) {\n                        var $a = $(this);\n                        resetStyle();\n                        $a.addClass('br-active')[nextAllorPreviousAll()]()\n                            .addClass('br-active');\n                        showSelectedRating($a.attr('data-rating-text'));\n                    }\n                });\n            };\n\n            // Handle mouseleave events\n            var attachMouseLeaveHandler = function() {\n                self.$widget.on('mouseleave.barrating blur.barrating', function() {\n                    showSelectedRating();\n                    applyStyle();\n                });\n            };\n\n            // Somewhat primitive way to remove 300ms click delay on touch devices\n            // for a more advanced solution consider setting `fastClicks` option to false\n            // and using a library such as fastclick (https://github.com/ftlabs/fastclick)\n            var fastClicks = function($elements) {\n                $elements.on('touchstart.barrating', function(event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    $(this).click();\n                });\n            };\n\n            // Disable clicks\n            var disableClicks = function($elements) {\n                $elements.on('click.barrating', function(event) {\n                    event.preventDefault();\n                });\n            };\n\n            var attachHandlers = function($elements) {\n                // Attach click event handler\n                attachClickHandler($elements);\n\n                if (self.options.hoverState) {\n                    // Attach mouseenter event handler\n                    attachMouseEnterHandler($elements);\n\n                    // Attach mouseleave event handler\n                    attachMouseLeaveHandler($elements);\n                }\n            };\n\n            var detachHandlers = function($elements) {\n                // Remove event handlers in the \".barrating\" namespace\n                $elements.off('.barrating');\n            };\n\n            var setupHandlers = function(readonly) {\n                var $elements = self.$widget.find('a');\n\n                if (getData('userOptions').fastClicks) {\n                    fastClicks($elements);\n                }\n\n                if (readonly) {\n                    detachHandlers($elements);\n                    disableClicks($elements);\n                } else {\n                    attachHandlers($elements);\n                }\n            };\n\n            this.show = function() {\n                // Run only once\n                if (getData()) {\n                    return;\n                }\n\n                // Wrap element\n                wrapElement();\n\n                // Save data\n                saveDataOnElement();\n\n                // Build & append widget to the DOM\n                self.$widget = buildWidget();\n                self.$widget.insertAfter(self.$elem);\n\n                applyStyle();\n\n                showSelectedRating();\n\n                setupHandlers(self.options.readonly);\n\n                // Hide the select field\n                self.$elem.hide();\n            };\n\n            this.readonly = function(state) {\n                if (typeof state !== 'boolean' || getData('readOnly') == state) {\n                    return;\n                }\n\n                setupHandlers(state);\n                setData('readOnly', state);\n                self.$widget.toggleClass('br-readonly');\n            };\n\n            this.set = function(value) {\n                var options = getData('userOptions');\n\n                if (self.$elem.find('option[value=\"' + value + '\"]').length === 0) {\n                    return;\n                }\n\n                // Set data\n                setData('ratingValue', value);\n                setData('ratingText', self.$elem.find('option[value=\"' + value + '\"]').text());\n                setData('ratingMade', true);\n\n                setSelectFieldValue(ratingValue());\n                showSelectedRating(ratingText());\n\n                applyStyle();\n\n                // OnSelect callback\n                if (!options.silent) {\n                    options.onSelect.call(\n                        this,\n                        ratingValue(),\n                        ratingText()\n                    );\n                }\n            };\n\n            this.clear = function() {\n                var options = getData('userOptions');\n\n                // Restore original data\n                setData('ratingValue', getData('originalRatingValue'));\n                setData('ratingText', getData('originalRatingText'));\n                setData('ratingMade', false);\n\n                resetSelectField();\n                showSelectedRating(ratingText());\n\n                applyStyle();\n\n                // OnClear callback\n                options.onClear.call(\n                    this,\n                    ratingValue(),\n                    ratingText()\n                );\n            };\n\n            this.destroy = function() {\n                var value = ratingValue();\n                var text = ratingText();\n                var options = getData('userOptions');\n\n                // Detach handlers\n                detachHandlers(self.$widget.find('a'));\n\n                // Remove widget\n                self.$widget.remove();\n\n                // Remove data\n                removeDataOnElement();\n\n                // Unwrap the element\n                unwrapElement();\n\n                // Show the element\n                self.$elem.show();\n\n                // OnDestroy callback\n                options.onDestroy.call(\n                    this,\n                    value,\n                    text\n                );\n            };\n        }\n\n        BarRating.prototype.init = function(options, elem) {\n            this.$elem = $(elem);\n            this.options = $.extend({}, $.fn.barrating.defaults, options);\n\n            return this.options;\n        };\n\n        return BarRating;\n    })();\n\n    $.fn.barrating = function(method, options) {\n        // eslint-disable-next-line consistent-return\n        return this.each(function() {\n            var plugin = new BarRating();\n\n            // Plugin works with select fields\n            if (!$(this).is('select')) {\n                $.error('Sorry, this plugin only works with select fields.');\n            }\n\n            // Method supplied\n            if (plugin.hasOwnProperty(method)) {\n                plugin.init(options, this);\n                if (method === 'show') {\n                    return plugin.show(options);\n                } else {\n                    // Plugin exists?\n                    if (plugin.$elem.data('barrating')) {\n                        plugin.$widget = $(this).next('.br-widget');\n                        return plugin[method](options);\n                    }\n                }\n\n                // No method supplied or only options supplied\n            } else if (typeof method === 'object' || !method) {\n                options = method;\n                plugin.init(options, this);\n                return plugin.show();\n            } else {\n                $.error('Method ' + method + ' does not exist on jQuery.barrating');\n            }\n        });\n    };\n\n    $.fn.barrating.defaults = {\n        theme: '',\n        initialRating: null, // Initial rating\n        allowEmpty: null, // Allow empty ratings?\n        emptyValue: '', // This is the expected value of the empty rating\n        showValues: false, // Display rating values on the bars?\n        showSelectedRating: true, // Append a div with a rating to the widget?\n        deselectable: true, // Allow to deselect ratings?\n        reverse: false, // Reverse the rating?\n        readonly: false, // Make the rating ready-only?\n        fastClicks: true, // Remove 300ms click delay on touch devices?\n        hoverState: true, // Change state on hover?\n        silent: false, // Supress callbacks when controlling ratings programatically\n        triggerChange: true, // Trigger change event when ratings are set or reset\n        onSelect: function(value, text, event) {\n            value = text;\n            value = event;\n        }, // Callback fired when a rating is selected\n        onClear: function(value, text) {\n            value = text;\n        }, // Callback fired when a rating is cleared\n        onDestroy: function(value, text) {\n            value = text;\n        } // Callback fired when a widget is destroyed\n    };\n\n    $.fn.barrating.BarRating = BarRating;\n\n}));\n"],"names":["define","amd","$","BarRating","self","this","wrapElement","classes","options","theme","push","$elem","wrap","join","unwrapElement","unwrap","findOption","value","isNumeric","Math","floor","getInitialOption","initialRating","getEmptyOption","$emptyOpt","find","emptyValue","length","allowEmpty","prependTo","getData","key","data","setData","saveDataOnElement","$opt","val","text","emptyText","userOptions","ratingValue","ratingText","originalRatingValue","originalRatingText","emptyRatingValue","emptyRatingText","readOnly","readonly","ratingMade","removeDataOnElement","removeData","buildWidget","$w","each","html","$a","showValues","append","showSelectedRating","reverse","addClass","nextAllorPreviousAll","setSelectFieldValue","prop","triggerChange","change","resetSelectField","defaultSelected","parent","fraction","round","resetStyle","$widget","removeClass","index","match","applyStyle","$all","$fractional","baseValue","f","isDeselectable","$element","deselectable","attr","attachClickHandler","$elements","on","event","preventDefault","onSelect","call","attachMouseEnterHandler","attachMouseLeaveHandler","fastClicks","stopPropagation","click","disableClicks","attachHandlers","hoverState","detachHandlers","off","setupHandlers","show","insertAfter","hide","state","toggleClass","set","silent","clear","onClear","destroy","remove","onDestroy","prototype","init","elem","extend","fn","barrating","defaults","method","plugin","is","error","hasOwnProperty","next"],"mappings":"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"}